"""add timestamps on database tables

Revision ID: 05e8874bf777
Revises: a426fd73f99f
Create Date: 2024-03-18 05:27:14.665063

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '05e8874bf777'
down_revision: Union[str, None] = 'a426fd73f99f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the "usertype" enum
    usertype_enum = sa.Enum('REGULAR', 'DASHBOARD', 'SUPERUSER', name='usertype')
    usertype_enum.create(op.get_bind())
    
    op.add_column('user', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('user', sa.Column('user_type', usertype_enum, nullable=False))
    op.drop_column('user', 'is_superuser')
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_column('user', 'user_type')
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    
    # Drop the "usertype" enum
    usertype_enum = sa.Enum(name='usertype')
    usertype_enum.drop(op.get_bind())
    
    # ### end Alembic commands ###
